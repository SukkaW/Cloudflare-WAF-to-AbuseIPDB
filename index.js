const fetch = require('node-fetch-retry');
const FormData = require('form-data');

const { env } = process;

const cfApiKey = env.CF_API_KEY;
const cfZoneId = env.CF_ZONE_ID;
const abipdbKey = env.ABUSEIPDB_KEY;

const now = new Date().getTime();

const since = new Date(now - 86400 * 1000).toISOString();
const until = new Date(now).toISOString();

let data = {};
let stat = 0;

function reportToAbuseIPDB(iplist) {
    function sleep(time) {
        return new Promise((resolve) => setTimeout(resolve, time));
    }

    function randomInt(min, max) {
        return Math.round(Math.random() * (max - min)) + min;
    }

    function report(ip) {
        const ipInfo = iplist[ip];
        const form = new FormData();

        form.append('ip', ip);
        form.append('comment', `The IP has triggered Cloudflare WAF. CF-Ray: ${ipInfo.ray_id} | WAF_Rule_ID: ${ipInfo.rule_id} | WAF_Kind: ${ipInfo.kind} | CF_Action: ${ipInfo.action} | Country: ${ipInfo.country} | CF_IPClass: ${ipInfo.ip_class} | Protocol: ${ipInfo.proto} | Method: ${ipInfo.method} | Host: ${ipInfo.host} | User-Agent: ${ipInfo.ua} | CF_DC: ${ipInfo.colo}. Report generated by Cloudflare-WAF-to-AbuseIPDB (https://github.com/SukkaW/Cloudflare-WAF-to-AbuseIPDB).`);
        form.append('categories', '9,13,14,15,16,19,20,21');

        fetch('https://api.abuseipdb.com/api/v2/report', {
            method: 'post',
            body: form,
            headers: { 'Key': abipdbKey, 'Accept': 'application/json', ...form.getHeaders() }
        })
            .then(res => res.json())
            .then(({ data }) => { console.log(`${data.ipAddress} has abuse confidence score of ${data.abuseConfidenceScore}`); })
            .catch((err) => { console.error('The IP has already been reported or AbuseIPDB\'s Rate Limit has been met'); });
    }

    for (const ip of Object.keys(iplist)) {
        sleep(randomInt(500, 120500)).then(() => {
            report(ip);
        })
    }
}

(function queryCfWAF(cfApiKey, cfZoneId, cursor) {
    if (stat === 0) console.log(`Querying Firewall Events from Cloudflare API V4...\n`);

    cursor = !cursor ? '' : `cursor=${cursor}`;
    fetch(`https://api.cloudflare.com/client/v4/zones/${cfZoneId}/security/events?limit=1000&since=${since}&until=${until}&${cursor}`, {
        headers: {
            'Authorization': `Bearer ${cfApiKey}`,
            'Content-Type': 'application/json'
        }
    }).then(res => res.json()).then(({ result, result_info }) => {
        for (const event of result) {
            data[event.ip] = event;
        }

        stat = Object.keys(data).length;

        return [result_info, result[result.length - 1].occurred_at];
    }).then(([{ cursors }, occured_at]) => {
        const toEnd = new Date(occured_at).getTime() - new Date(since).getTime();
        if (toEnd < 0) {
            // To the End
            console.log(`----------------------------------------\n${stat} IPs has been quried from Cloudflare API. Reporting to AbuseIPDB...`)
            reportToAbuseIPDB(data);
        } else {
            console.log(`${stat} IPs already queried from Cloudflare API.`)
            queryCfWAF(cfApiKey, cfZoneId, cursors.before);
        }
    });
})(cfApiKey, cfZoneId);

